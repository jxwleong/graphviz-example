digraph G {
	rankdir=LR
	ALU [label=ALU fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.7 shape=box style=filled width=2.4]
	ALU_Control [label=ALU_Control fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=16 height=1.3 shape=box style=filled width=2.1]
	AddSum [label=AddSum fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.7 shape=box style=filled width=2.4]
	Add_PC [label=Add_PC fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=16 height=1.3 shape=box style=filled width=2.1]
	Control [label=Control fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=26 height=2.3 shape=box style=filled width=3.6]
	Data_Memory [label=Data_Memory fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=26 height=2.5 shape=box style=filled width=3.6]
	EX_MEM [label=EX_MEM fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=38 height=5.500000000000001 shape=box style=filled width=5.4]
	ForwardToData1 [label=ForwardToData1 fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=20 height=1.7 shape=box style=filled width=2.7]
	ForwardToData2 [label=ForwardToData2 fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=20 height=1.7 shape=box style=filled width=2.7]
	ForwardingUnit [label=ForwardingUnit fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=24 height=2.3 shape=box style=filled width=3.3]
	HazradDetect [label=HazradDetect fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=20 height=1.7 shape=box style=filled width=2.7]
	ID_EX [label=ID_EX fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=48 height=7.500000000000001 shape=box style=filled width=6.8999999999999995]
	IF_ID [label=IF_ID fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=26 height=2.7 shape=box style=filled width=3.6]
	Instruction_Memory [label=Instruction_Memory fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=20 height=1.7 shape=box style=filled width=2.7]
	MEM_WB [label=MEM_WB fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=28 height=3.5 shape=box style=filled width=3.9]
	MUX_ALUSrc [label=MUX_ALUSrc fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	MUX_Control [label=MUX_Control fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=28 height=3.7 shape=box style=filled width=3.9]
	PC [label=PC fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=20 height=1.7 shape=box style=filled width=2.7]
	PCImmExtend [label=PCImmExtend fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	Registers [label=Registers fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=30 height=3.3 shape=box style=filled width=4.199999999999999]
	Sign_Extend [label=Sign_Extend fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	VALU [label=VALU fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.7 shape=box style=filled width=2.4]
	VALU_Control [label=VALU_Control fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=14 height=1.1 shape=box style=filled width=1.8]
	aluToDM [label=aluToDM fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	memToReg [label=memToReg fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	pcSelect [label=pcSelect fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=18 height=1.5 shape=box style=filled width=2.4]
	shiftLeft [label=shiftLeft fillcolor="#e6f2ff" fixedsize=false fontname="times-bold" fontsize=14 height=1.1 shape=box style=filled width=1.8]
	ALU_Control -> ALU [label="ALU_Control.ALUCtrl_o -> ALU.ALUCtrl_i"]
	ForwardToData1 -> ALU [label="ForwardToData1.data_o -> ALU.data1_i"]
	MUX_ALUSrc -> ALU [label="MUX_ALUSrc.data_o -> ALU.data2_i"]
	ID_EX -> ALU_Control [label="ID_EX.ALUOp_o -> ALU_Control.ALUOp_i"]
	CONST_ALUfunct_in [label=ALUfunct_in fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_ALUfunct_in -> ALU_Control [label="ALUfunct_in -> ALU_Control.funct_i"]
	CONST_3_b001 [label="3'b001" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_3_b001 -> AddSum [label="3'b001 -> AddSum.ALUCtrl_i"]
	IF_ID -> AddSum [label="IF_ID.pc_o -> AddSum.data1_i"]
	shiftLeft -> AddSum [label="shiftLeft.data_o -> AddSum.data2_i"]
	PC -> Add_PC [label="PC.pc_o -> Add_PC.data1_in"]
	CONST_32_d4 [label="32'd4" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_32_d4 -> Add_PC [label="32'd4 -> Add_PC.data2_in"]
	IF_ID -> Control [label="IF_ID.IF_ID_inst_o -> Control.Op_i"]
	EX_MEM -> Data_Memory [label="EX_MEM.MemRead_o -> Data_Memory.MemRead_i"]
	EX_MEM -> Data_Memory [label="EX_MEM.MemWrite_o -> Data_Memory.MemWrite_i"]
	aluToDM -> Data_Memory [label="aluToDM.data_o -> Data_Memory.addr_i"]
	CONST_clk_i [label=clk_i fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_clk_i -> Data_Memory [label="clk_i -> Data_Memory.clk_i"]
	EX_MEM -> Data_Memory [label="EX_MEM.RDData_o -> Data_Memory.data_i"]
	CONST_address [label=address fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_address -> Data_Memory [label="address -> Data_Memory.op_addr"]
	CONST_rst [label=rst fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_rst -> Data_Memory [label="rst -> Data_Memory.reset"]
	ALU -> EX_MEM [label="ALU.data_o -> EX_MEM.ALUResult_i"]
	ID_EX -> EX_MEM [label="ID_EX.MemRead_o -> EX_MEM.MemRead_i"]
	ID_EX -> EX_MEM [label="ID_EX.MemToReg_o -> EX_MEM.MemToReg_i"]
	ID_EX -> EX_MEM [label="ID_EX.MemWrite_o -> EX_MEM.MemWrite_i"]
	ForwardToData2 -> EX_MEM [label="ForwardToData2.data_o -> EX_MEM.RDData_i"]
	ID_EX -> EX_MEM [label="ID_EX.RegDst_o -> EX_MEM.RDaddr_i"]
	ID_EX -> EX_MEM [label="ID_EX.RegWrite_o -> EX_MEM.RegWrite_i"]
	VALU -> EX_MEM [label="VALU.v_o -> EX_MEM.VALUResult_i"]
	CONST_clk_i -> EX_MEM [label="clk_i -> EX_MEM.clk_i"]
	ID_EX -> EX_MEM [label="ID_EX.inst_o -> EX_MEM.instr_i"]
	ID_EX -> EX_MEM [label="ID_EX.pc_o -> EX_MEM.pc_i"]
	CONST_start_i [label=start_i fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_start_i -> EX_MEM [label="start_i -> EX_MEM.start_i"]
	ALU -> EX_MEM [label="ALU.Zero_o -> EX_MEM.zero_i"]
	EX_MEM -> ForwardToData1 [label="EX_MEM.ALUResult_o -> ForwardToData1.EX_MEM_i"]
	memToReg -> ForwardToData1 [label="memToReg.data_o -> ForwardToData1.MEM_WB_i"]
	ID_EX -> ForwardToData1 [label="ID_EX.RDData0_o -> ForwardToData1.data_i"]
	ForwardingUnit -> ForwardToData1 [label="ForwardingUnit.ForwardA_o -> ForwardToData1.select_i"]
	EX_MEM -> ForwardToData2 [label="EX_MEM.ALUResult_o -> ForwardToData2.EX_MEM_i"]
	memToReg -> ForwardToData2 [label="memToReg.data_o -> ForwardToData2.MEM_WB_i"]
	ID_EX -> ForwardToData2 [label="ID_EX.RDData1_o -> ForwardToData2.data_i"]
	ForwardingUnit -> ForwardToData2 [label="ForwardingUnit.ForwardB_o -> ForwardToData2.select_i"]
	EX_MEM -> ForwardingUnit [label="EX_MEM.RDaddr_o -> ForwardingUnit.EX_MEM_RD_i"]
	EX_MEM -> ForwardingUnit [label="EX_MEM.RegWrite_o -> ForwardingUnit.EX_MEM_RegWrite_i"]
	ID_EX -> ForwardingUnit [label="ID_EX.RSaddr_o -> ForwardingUnit.ID_EX_RS_i"]
	ID_EX -> ForwardingUnit [label="ID_EX.RTaddr_o -> ForwardingUnit.ID_EX_RT_i"]
	MEM_WB -> ForwardingUnit [label="MEM_WB.RDaddr_o -> ForwardingUnit.MEM_WB_RD_i"]
	MEM_WB -> ForwardingUnit [label="MEM_WB.RegWrite_o -> ForwardingUnit.MEM_WB_RegWrite_i"]
	ID_EX -> HazradDetect [label="ID_EX.MemRead_o -> HazradDetect.ID_EX_MemRead_i"]
	IF_ID -> HazradDetect [label="IF_ID.IF_ID_inst_o -> HazradDetect.ID_EXrd_i"]
	IF_ID -> HazradDetect [label="IF_ID.IF_ID_inst_o -> HazradDetect.IF_IDrs1_i"]
	IF_ID -> HazradDetect [label="IF_ID.IF_ID_inst_o -> HazradDetect.IF_IDrs2_i"]
	MUX_Control -> ID_EX [label="MUX_Control.ALUOp_o -> ID_EX.ALUOp_i"]
	MUX_Control -> ID_EX [label="MUX_Control.ALUSrc_o -> ID_EX.ALUSrc_i"]
	MUX_Control -> ID_EX [label="MUX_Control.MemRead_o -> ID_EX.MemRead_i"]
	MUX_Control -> ID_EX [label="MUX_Control.MemToReg_o -> ID_EX.MemToReg_i"]
	MUX_Control -> ID_EX [label="MUX_Control.MemWrite_o -> ID_EX.MemWrite_i"]
	CONST_PC_Branch_Select [label=PC_Branch_Select fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_PC_Branch_Select -> ID_EX [label="PC_Branch_Select -> ID_EX.PC_branch_select_i"]
	Registers -> ID_EX [label="Registers.RSdata_o -> ID_EX.RDData0_i"]
	Registers -> ID_EX [label="Registers.RTdata_o -> ID_EX.RDData1_i"]
	IF_ID -> ID_EX [label="IF_ID.IF_ID_inst_o -> ID_EX.RSaddr_i"]
	IF_ID -> ID_EX [label="IF_ID.IF_ID_inst_o -> ID_EX.RTaddr_i"]
	MUX_Control -> ID_EX [label="MUX_Control.RegDst_o -> ID_EX.RegDst_i"]
	MUX_Control -> ID_EX [label="MUX_Control.RegWrite_o -> ID_EX.RegWrite_i"]
	Sign_Extend -> ID_EX [label="Sign_Extend.data_o -> ID_EX.SignExtended_i"]
	CONST_clk_i -> ID_EX [label="clk_i -> ID_EX.clk_i"]
	IF_ID -> ID_EX [label="IF_ID.inst_o -> ID_EX.inst_i"]
	PCImmExtend -> ID_EX [label="PCImmExtend.data_o -> ID_EX.pcEx_i"]
	IF_ID -> ID_EX [label="IF_ID.pc_o -> ID_EX.pc_i"]
	CONST_start_i -> ID_EX [label="start_i -> ID_EX.start_i"]
	CONST_clk_i -> IF_ID [label="clk_i -> IF_ID.clk_i"]
	CONST_PC_Branch_Select -> IF_ID [label="PC_Branch_Select -> IF_ID.flush_i"]
	HazradDetect -> IF_ID [label="HazradDetect.Hazard_o -> IF_ID.hazard_i"]
	Instruction_Memory -> IF_ID [label="Instruction_Memory.instr_o -> IF_ID.inst_i"]
	CONST_pcIm [label=pcIm fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_pcIm -> IF_ID [label="pcIm -> IF_ID.pcIm_i"]
	PC -> IF_ID [label="PC.pc_o -> IF_ID.pc_i"]
	CONST_start_i -> IF_ID [label="start_i -> IF_ID.start_i"]
	PC -> Instruction_Memory [label="PC.pc_o -> Instruction_Memory.addr_i"]
	CONST_clk_i -> Instruction_Memory [label="clk_i -> Instruction_Memory.clk"]
	CONST_instr_i [label=instr_i fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_instr_i -> Instruction_Memory [label="instr_i -> Instruction_Memory.instr_i"]
	CONST_rst -> Instruction_Memory [label="rst -> Instruction_Memory.reset"]
	aluToDM -> MEM_WB [label="aluToDM.data_o -> MEM_WB.ALUResult_i"]
	Data_Memory -> MEM_WB [label="Data_Memory.data_o -> MEM_WB.DataMemReadData_i"]
	EX_MEM -> MEM_WB [label="EX_MEM.MemToReg_o -> MEM_WB.MemToReg_i"]
	EX_MEM -> MEM_WB [label="EX_MEM.RDData_o -> MEM_WB.RDData_i"]
	EX_MEM -> MEM_WB [label="EX_MEM.RDaddr_o -> MEM_WB.RDaddr_i"]
	EX_MEM -> MEM_WB [label="EX_MEM.RegWrite_o -> MEM_WB.RegWrite_i"]
	CONST_clk_i -> MEM_WB [label="clk_i -> MEM_WB.clk_i"]
	CONST_start_i -> MEM_WB [label="start_i -> MEM_WB.start_i"]
	ForwardToData2 -> MUX_ALUSrc [label="ForwardToData2.data_o -> MUX_ALUSrc.data1_i"]
	ID_EX -> MUX_ALUSrc [label="ID_EX.SignExtended_o -> MUX_ALUSrc.data2_i"]
	ID_EX -> MUX_ALUSrc [label="ID_EX.ALUSrc_o -> MUX_ALUSrc.select_i"]
	Control -> MUX_Control [label="Control.ALUOp_o -> MUX_Control.ALUOp_i"]
	Control -> MUX_Control [label="Control.ALUSrc_o -> MUX_Control.ALUSrc_i"]
	HazradDetect -> MUX_Control [label="HazradDetect.Hazard_o -> MUX_Control.Hazard_i"]
	Control -> MUX_Control [label="Control.MemRd_o -> MUX_Control.MemRead_i"]
	Control -> MUX_Control [label="Control.MemToReg_o -> MUX_Control.MemToReg_i"]
	Control -> MUX_Control [label="Control.MemWr_o -> MUX_Control.MemWrite_i"]
	IF_ID -> MUX_Control [label="IF_ID.IF_ID_inst_o -> MUX_Control.RegDst_i"]
	Control -> MUX_Control [label="Control.RegWrite_o -> MUX_Control.RegWrite_i"]
	CONST_clk_i -> PC [label="clk_i -> PC.clk_i"]
	HazradDetect -> PC [label="HazradDetect.Hazard_o -> PC.hazardpc_i"]
	pcSelect -> PC [label="pcSelect.data_o -> PC.pc_i"]
	CONST_start_i -> PC [label="start_i -> PC.start_i"]
	IF_ID -> PCImmExtend [label="IF_ID.pcIm_o -> PCImmExtend.data0_i"]
	CONST_12_b0 [label="12'b0" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_12_b0 -> PCImmExtend [label="12'b0 -> PCImmExtend.data1_i"]
	CONST_1_b0 [label="1'b0" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_1_b0 -> PCImmExtend [label="1'b0 -> PCImmExtend.select_i"]
	MEM_WB -> Registers [label="MEM_WB.RDaddr_o -> Registers.RDaddr_i"]
	memToReg -> Registers [label="memToReg.data_o -> Registers.RDdata_i"]
	IF_ID -> Registers [label="IF_ID.IF_ID_inst_o -> Registers.RSaddr_i"]
	IF_ID -> Registers [label="IF_ID.IF_ID_inst_o -> Registers.RTaddr_i"]
	MEM_WB -> Registers [label="MEM_WB.RegWrite_o -> Registers.RegWrite_i"]
	CONST_clk_i -> Registers [label="clk_i -> Registers.clk_i"]
	CONST_vector_signed_1_ [label="vector_signed[1]" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_vector_signed_1_ -> Registers [label="vector_signed[1] -> Registers.is_pos_i"]
	CONST_address -> Registers [label="address -> Registers.op_address"]
	CONST_rst -> Registers [label="rst -> Registers.reset"]
	IF_ID -> Sign_Extend [label="IF_ID.IF_ID_inst_o -> Sign_Extend.data0_i"]
	CONST__IF_ID_inst_o_31_25__IF_ID_inst_o_11_7__ [label="{IF_ID_inst_o[31:25],IF_ID_inst_o[11:7]}" fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST__IF_ID_inst_o_31_25__IF_ID_inst_o_11_7__ -> Sign_Extend [label="{IF_ID_inst_o[31:25],IF_ID_inst_o[11:7]} -> Sign_Extend.data1_i"]
	Control -> Sign_Extend [label="Control.immSelect_o -> Sign_Extend.select_i"]
	VALU_Control -> VALU [label="VALU_Control.VALUCtrl_o -> VALU.VALUCtrl_i"]
	ForwardToData1 -> VALU [label="ForwardToData1.data_o -> VALU.v1_i"]
	MUX_ALUSrc -> VALU [label="MUX_ALUSrc.data_o -> VALU.v2_i"]
	CONST_ALUfunct_in -> VALU_Control [label="ALUfunct_in -> VALU_Control.vfunct_i"]
	EX_MEM -> aluToDM [label="EX_MEM.ALUResult_o -> aluToDM.data1_i"]
	EX_MEM -> aluToDM [label="EX_MEM.VALUResult_o -> aluToDM.data2_i"]
	CONST_toDataMemory [label=toDataMemory fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_toDataMemory -> aluToDM [label="toDataMemory -> aluToDM.select_i"]
	MEM_WB -> memToReg [label="MEM_WB.ALUResult_o -> memToReg.data1_i"]
	MEM_WB -> memToReg [label="MEM_WB.DataMemReadData_o -> memToReg.data2_i"]
	MEM_WB -> memToReg [label="MEM_WB.MemToReg_o -> memToReg.select_i"]
	Add_PC -> pcSelect [label="Add_PC.data_o -> pcSelect.data1_i"]
	AddSum -> pcSelect [label="AddSum.data_o -> pcSelect.data2_i"]
	CONST_isBranch [label=isBranch fillcolor="#fff2cc" fontsize=14 shape=ellipse style=filled]
	CONST_isBranch -> pcSelect [label="isBranch -> pcSelect.select_i"]
	PCImmExtend -> shiftLeft [label="PCImmExtend.data_o -> shiftLeft.data_i"]
}
